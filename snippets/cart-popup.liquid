{%- style -%}
  {% assign cart_popup_box_shadow = settings.color_borders | color_modify: 'alpha', 0.5 %}

  .cart-popup {
    box-shadow: 1px 1px 10px 2px {{ cart_popup_box_shadow }};
 
  }
{%- endstyle -%}


<style>
  .CartItemWrapper {
    overflow: auto;
   height: calc(100vh - 300px);
   z-index: 9999999;
   position: relative; 
    transition: transform 1s ease, top 1s ease;
    
}
  .cart-subtotal__price{
    padding-left:0;
    min-width:0;
  }
.CartItem {
display: table;
table-layout: fixed;
margin:0;
width: 100%;
padding: 20px;
border-top: 1px solid #d2a63f30;
}
.Drawer__Footer {
flex: none;
padding:20px;
background: #3e3e3e;
border-top: 1px solid #d2a63f;  
    
}
  @media screen and (min-width: 641px){
.CartItem__ImageWrapper {
    width: 120px;
}
}
.CartItem__ImageWrapper {
    width: 90px;
    min-width: 90px;
    text-align: center;
}
.CartItem__ImageWrapper, .CartItem__Info {
    display: table-cell;
    vertical-align: middle;
}
.AspectRatio {
    position: relative;
    margin-left: auto;
    margin-right: auto;
     height: 65px;
    width: 65px;
    
}

  .CartItem__Info {
    padding-left: 25px;
}

.CartItem__ImageWrapper, .CartItem__Info {
    display: table-cell;
    vertical-align: middle;
}
  @supports (--css: variables)
.AspectRatio:before {
    padding-bottom: calc(100% / (var(--aspect-ratio)));
}
.AspectRatio:before {
    content: "";
    display: block;
}
  .AspectRatio {
    position: relative;
    margin-left: auto;
    margin-right: auto;
}
  .AspectRatio>img {
    max-height: 100%;
    max-width: 100%;
}
  @media screen and (min-width: 641px){
.CartItem__Title {
    font-size: 12px;
}
    }
.CartItem__Title, .CartItem__Variant, .CartItem__PropertyList {
    margin-bottom: 0.45em;
}
.CartItem__Title {
    width: 100%;
    font-size: 11px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}
.Heading {
    font-family: Montserrat,sans-serif;
    font-weight: 500;
    font-style: normal;
    color:white;
    transition: color .2s ease-in-out;
    letter-spacing: .2em;
    text-transform: uppercase;
}
  .CartItem__Variant{
    color:white;
  }
  
 @media screen and (min-width: 641px){
.CartItem__Meta, .CartItem__LinePriceList {
    font-size: 11px;
}
   }

.CartItem__Meta, .CartItem__LinePriceList, .CartItem__DiscountList {
    font-size: 9px;
}
.Text--subdued {
    color: #6a6a6a;
}
.Heading {
    color:white;
    transition: color .2s ease-in-out;
    text-transform: capitalize;
    margin-bottom: 3px;
    display: block;
    font-size: 16px;
    letter-spacing: 0.4px;
    font-weight: 600;
} 
  .CartItem__Actions {
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-wrap: wrap;
}

.Text--subdued {
    color: #6a6a6a;
}
  .CartItem__Title, .CartItem__Variant, .CartItem__PropertyList {
    margin-bottom: 0.45em;
}
  .CartItem__PropertyList {
    list-style: none;
    font-style: italic;
}
  @media screen and (min-width: 641px){
.CartItem__PriceList {
    margin-bottom: 20px;
}
    }
.CartItem__PriceList {
    margin-bottom: 16px;
}
  @media screen and (min-width: 641px)
.CartItem__Remove {
    font-size: 9px;
}
.CartItem__Remove {
    margin: 8px 0;
    font-size: 8px;
}

.Link--underline, .shopify-payment-button__more-options {
    position: relative;
    display: inline-block;
}
  

.QuantitySelector {
    display: inline-flex;
    align-items: center;
    border: 1px solid #cfcfcf;
    white-space: nowrap;
}
  @media screen and (min-width: 641px){
.QuantitySelector__Button {
    padding: 7px 14px 8px;
}
    }
.QuantitySelector__Button {
    display: inline-block;
    padding: 5px 9px;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

  @media screen and (min-width: 641px){
.QuantitySelector__CurrentQuantity {
    font-size: 12px;
}
  }
.QuantitySelector__CurrentQuantity {
    display: inline-block;
    width: 20px;
    padding: 0;
    font-size: 10px;
    text-align: center;
    letter-spacing: normal;
    color:white;
    background: transparent;
    border: none;
}
  @media screen and (min-width: 641px){
.QuantitySelector__Button {
    padding: 7px 14px 8px;
}
  }
.QuantitySelector__Button {
    display: inline-block;
    padding: 5px 9px;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    color:white;
    border-left: 1px solid white;
    border-right: 1px solid white;
}
  .QuantitySelector svg {
    width: 10px;
    height: 10px;
    stroke-width: 1.5px;
    vertical-align: -1px;
}
  span.CartItem__OriginalPrice.Price.Price--compareAt {
    font-size: 14px;
    font-weight: bold;
    line-height: 26px;
    color:white;
    font-size: 16px;
    font-weight: 600;
    letter-spacing: 0.2px
}
  @media screen and (min-width: 641px){
.Cart .Drawer__Footer, .Cart__OffscreenNoteContainer {
    padding: 20px 30px 30px;
}
    }
.Cart .Drawer__Footer, .Cart__OffscreenNoteContainer {
    padding: 14px 24px 24px;
}
.Drawer__Footer {
    flex: none;
 
}
@media screen and (min-width: 641px){
.Cart__NoteButton+.Cart__Taxes {
    margin-top: 4px;
}
    }
.Cart__Taxes {
    margin-bottom: 8px;
}
.Button--primary{
    color: #fff;
    border-color: #1c1b1b;
    position: relative;
    display: inline-block;
    padding: 14px 28px;
    line-height: normal;
    border: 1px solid transparent;
    border-radius: 0;
    text-transform: uppercase;
    font-size: 12px;
    text-align: center;
    letter-spacing: .2em;
    font-family: Montserrat,sans-serif;
    font-weight: 500;
    font-style: normal;
    background-color: transparent;
    transition: color .45s cubic-bezier(.785,.135,.15,.86),border .45s cubic-bezier(.785,.135,.15,.86);
    z-index: 1;
    -webkit-tap-highlight-color: initial;
}
  .Button--full {
    width: 100%;
}
.Button--primary:before{
    background-color: #1c1b1b;
    position: absolute;
    content: "";
    display: block;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    transform: scale(1);
    transform-origin: left center;
    z-index: -1;
}
  .cart-subtotal {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
   text-transform: uppercase;
    color: white;
    font-size: 11px;
}
  .shopify-buy__cart__notice {
    clear: both;
    padding-top:10px;
    padding-bottom:10px;
    text-align: center;
    color: #ffffff;
    font-size: 12px;
    font-weight: 500;
}
  .shopify-buy__btn.shopify-buy__btn--cart-checkout {
    font-weight: bold;
    font-size: 18px;
    padding-top: 17px;
    padding-bottom: 17px;
    background-color: #d3a640;
    border-radius: 0px;
}
  .shopify-buy__btn--cart-checkout {
    clear: both;
    margin-top: 15px;
    width: 100%;
    padding: 10px 5px;
    font-size: 16px;
}
  .shopify-buy__btn {
    color: #fff;
    font-size: 15px;
    background-color: #78b657;
    padding: 12px 40px;
    letter-spacing: .3px;
    display: block;
    border-radius: 3px;
    cursor: pointer;
    -webkit-transition: background 200ms ease;
    transition: background 200ms ease;
    max-width: 100%;
    text-overflow: ellipsis;
    overflow: hidden;
    line-height: 1.2;
    border: 0;
    -moz-appearance: none;
    -webkit-appearance: none;
}
  .cart-popup form{
     height:100%;
  
  }
  span.cart-subtotal__title{
    font-size: 16px;
    text-transform: capitalize;
    font-weight: 600;
    letter-spacing: 0.4px;
  }
  .cart-subtotal__price{
    font-size: 16px;
    font-weight: 600;
  }
  .actionWrapper {
    display: flex;
    flex-direction: column;
    align-items: baseline;
    flex-wrap: wrap-reverse;
}
a.text-link.text-link--accent.cart__remove_button {
    color: white;
    font-size: 15px;
    font-weight: 600;
}
  .CartItem:last-child {
    border-bottom: 1px solid #d2a63f30;
}
  .cart-popup-wrapper--hidden {
    display: none;
    transform: translateX(100%);
  
}
.revelthecart {
    display: block;
    transform: translateX(0);
    transition: all 1s;
}
svg.Icon.Icon--close {
    width: 20px;
    font-weight: 600;
    margin-top: 10px;
}
  #testWrapper .emptyCart {
    font-size: 18px;
    padding: 30px;
    text-align: center;
}
li.CartItem__Discount {
    color: white;
    font-size: 12px;
    margin-top: 10px;
}
  a.text-link.text-link--accent.cart__remove_button {
color: white;
font-size: 13px;
font-weight: 500;
text-decoration: none;
border: none;
background: #d2a63f;
padding: 3px 5px;
position: relative;
top: 9px;
}
.Icon--cart{
   cursor:pointer;
}
.CartItem__Property{
color:#fff;
}
</style>
<div class="cart-popup-wrapper cart-popup-wrapper--hidden critical-hidden"  id="mainPopup" role="dialog" aria-modal="true" aria-labelledby="CartPopupHeading" data-cart-popup-wrapper>
  <div class="cart-popup" data-cart-popup tabindex="-1">
    <div class="cart-popup__header">
      <h2 id="CartPopupHeading" class="cart-popup__heading">My Cart</h2>
      <button class="cart-popup__close" aria-label="{{ 'general.accessibility.close_modal' | t }}" data-cart-popup-close>{%- render 'icon' with 'close' -%}</button>
    </div>
   

    <div class="cart-popup-item" style="display:none">
      <div class="cart-popup-item__image-wrapper hide" data-cart-popup-image-wrapper data-image-loading-animation></div>
      <div class="cart-popup-item__description">
        <div>
          <h3 class="cart-popup-item__title" data-cart-popup-title></h3>
          <ul class="product-details" aria-label="{{ 'cart.popup.product_details' | t }}" data-cart-popup-product-details></ul>
        </div>
        <div class="cart-popup-item__quantity">
          <span class="visually-hidden" data-cart-popup-quantity-label></span>
          <span aria-hidden="true">{{ 'cart.popup.quantity' | t }}:</span>
          <span aria-hidden="true" data-cart-popup-quantity></span>
        </div>
      </div>
    </div>
  
<form action="/cart" method="POST" novalidate>
   <div class="CartItemWrapper" id="testWrapper">
       {% if cart.item_count == 0 %}
         <h2 class="emptyCart">Your Cart is Empty</h2>
        {% endif %}
         
     {%- for line_item in cart.items -%}
    
        <div class="CartItem">
          <div class="CartItem__ImageWrapper AspectRatio">
            <div class="AspectRatio" style="--aspect-ratio: {{ line_item.image.aspect_ratio }}">
              <img class="CartItem__Image" src="{{ line_item.image | img_url: '240x' }}" alt="{{ line_item.image.alt | escape }}">
            </div>
          </div>

      <div class="CartItem__Info">
        <h2 class="CartItem__Title Heading">
          <a href="{{ line_item.url }}">{{ line_item.product.title }}</a>
        </h2>

        <div class="CartItem__Meta Heading Text--subdued">
          {%- unless line_item.product.has_only_default_variant -%}
            <p class="CartItem__Variant">{{ line_item.variant.title }}</p>
          {%- endunless -%}

          {%- if line_item.properties != empty -%}
            <ul class="CartItem__PropertyList">
              {%- for property in line_item.properties -%}
                {%- assign first_character_in_key = property.first | truncate: 1, '' -%}

                {%- if property.last == blank or first_character_in_key == '_' -%}
                  {%- continue -%}
                {%- endif -%}
                {% if property.first contains "Free" %}
                   <li class="CartItem__Property" style="display: flex; align-items: center;font-size: 10px;color: #d1a63f;">{{ property.last }}</li>
                {% else %}
                    <li class="CartItem__Property">{{ property.first }}: {{ property.last }}</li>
                {% endif %}

              {%- endfor -%}
            </ul>
          {%- endif -%}

          <div class="CartItem__PriceList">
           

            {%- if line_item.line_level_discount_allocations != blank -%}
              <ul class="CartItem__DiscountList">
                {%- for discount_allocation in line_item.line_level_discount_allocations -%}
                  <li class="CartItem__Discount">
                    {{ discount_allocation.discount_application.title }}: -{{ discount_allocation.amount | money }}
                  </li>
                {%- endfor -%}
              </ul>
            {%- endif -%}
          </div>
        </div>

        {%- capture item_actions -%}
          <div class="CartItem__Actions Heading Text--subdued" style="text-align: center">
            <div class="CartItem__QuantitySelector">
              <div class="QuantitySelector">
                {%- assign quantity_minus_one = line_item.quantity | minus: 1 -%}
           
                <a class="QuantitySelector__Button Link Link--primary" type="button" data-quantity="{{ quantity_minus_one }}" data-line-id="{{ line_item.key }}" data-action="update-item-quantity">
                 {%- render 'icon' with 'minus' -%}
                </a>

                <input type="text" name="updates[]" data-line="{{ forloop.index }}" id="updates_{{ line_item.key }}" class="QuantitySelector__CurrentQuantity" pattern="[0-9]*" data-line-id="{{ line_item.key }}" value="{{ line_item.quantity }}">

                {%- assign quantity_plus_one = line_item.quantity | plus: 1 -%}

                <a class="QuantitySelector__Button Link Link--primary" type="button"  data-quantity="{{ quantity_plus_one }}" data-line-id="{{ line_item.key }}" data-action="update-item-quantity">
                 {%- render 'icon' with 'plus' -%}
                </a>
                
              </div>
            
            </div>
            <div class="actionWrapper">
              
                         
                        <span class="CartItem__OriginalPrice Price Price--compareAt">{%- if line_item.original_price != line_item.final_price -%}<span style="color:white;text-decoration:line-through" >{{ line_item.original_line_price |money }}</span> {{ line_item.final_line_price | money }}{% else %}{{ line_item.original_line_price |money }}{% endif %}</span>
                   
                        <a href="/cart/change?line={{ forloop.index }}&amp;quantity=0" class="text-link text-link--accent cart__remove_button" data-line={{forloop.index}} aria-label="{{ 'cart.label.remove' | t: product: item.title }}" data-cart-remove data-role="product-remove">{{ 'cart.general.remove' | t }}</a>
                   
                          </div>
          </div>
        {%- endcapture -%}

        {{ item_actions }}
       {% capture my_variable %}{{ cart.total_price | money_with_currency }}{% endcapture %}
      </div>

     
    </div>

   
  
   
  {%- endfor -%}
        

    </div>
 
     
    <div class="Drawer__Footer" id="DrawFooterController">
   
        {%- capture shipping_and_taxes_notice -%}{{ 'cart.general.shipping_and_taxes_notice' | t }}{%- endcapture -%}

        {%- if settings.cart_enable_notes or shipping_and_taxes_notices != blank -%}
          {%- if settings.cart_enable_notes -%}
            {%- if cart.note == blank -%}
              <button type="button" class="Cart__NoteButton" data-action="toggle-cart-note">{{ 'cart.general.add_note' | t }}</button>
            {%- else -%}
              <button type="button" class="Cart__NoteButton" data-action="toggle-cart-note">{{ 'cart.general.edit_note' | t }}</button>
            {%- endif -%}
          {%- endif -%}

          {%- if shipping_and_taxes_notice != blank -%}
            <p class="Cart__Taxes Text--subdued">{{ shipping_and_taxes_notice }}</p>
          {%- endif -%}

          {%- if cart.cart_level_discount_applications != blank -%}
            {%- for discount_application in cart.cart_level_discount_applications -%}
              <p class="Cart__Discount">{%- render 'icon' with 'sale' -%} {{ 'Discount' | t }} ({{ discount_application.title }}): -<span>{{ discount_application.total_allocated_amount | money_without_trailing_zeros }}</span></p>
            {%- endfor -%}
          {%- endif -%}
          
        {%- endif -%}

      
     
        <div class="cart-subtotal">
              <span class="cart-subtotal__title">Subtotal</span>
              <span class="cart-subtotal__price" id="CartSubtotal">{{ cart.total_price | money_without_trailing_zeros }}</span>
            </div>
      <div class="shopify-buy__cart__noticeContainer">
      <p class="shopify-buy__cart__notice" >
        Shipping and discount codes are added at checkout.
      </p>
      </div>
      
      {% comment %}
      <button type="submit" name="checkout" class="Cart__Checkout Button Button--primary Button--full">
          <span>{{- 'cart.general.checkout' | t -}}</span>
          <span class="Button__SeparatorDot"></span>
          <span>{{ cart.total_price | money_without_trailing_zeros }}</span>
        </button>
       {% endcomment %}
      <button class="shopify-buy__btn shopify-buy__btn--cart-checkout" name="checkout" type="submit" data-element="cart.button">{{- 'cart.general.checkout' | t -}}</button>

        
      </div>



 </form>
  
    <a href="{{ routes.cart_url }}" class="cart-popup__cta-link btn btn--secondary-accent" style="display:none">
      {{ 'products.product.view_cart' | t }} (<span data-cart-popup-cart-quantity></span>)
    </a>
  
    <div class="cart-popup__dismiss">
      <button class="cart-popup__dismiss-button text-link text-link--accent" data-cart-popup-dismiss>
        {{ 'cart.general.continue_shopping' | t }}
      </button>
    </div>
  </div>
</div>
<script>
  $(document).on('click', '.QuantitySelector__Button',function(e){
    e.preventDefault();
    
   var dataQuanity= $(this).data("quantity");
   var dataLineid=$(this).data("line-id");
  
  
    $.ajax({
        url: '/cart/change',
        Method: 'POST',
        dataType: "json",
        data: {
                id:dataLineid,
                quantity:dataQuanity                         
                },

        success: function(data){
            $('#testWrapper').load(' #testWrapper');
            $("#CartSubtotal").load(" #CartSubtotal");
            $("#badgeCounter").html(data.item_count);
          
           
        
        }       
    });
    // Do more stuff every anchor click here...
    jQuery.getJSON('/cart.js', function(cart) {
   // now have access to Shopify cart object
  // console.log(cart);
} );
});
  
// $(document).on('click','.product-form__cart-submit',function(e){
//     e.preventDefault();
  
//     jQuery.getJSON('/cart.js', function(cart) {

//      $("#badgeCounter").html(cart.item_count);
      
// });
  
//});
  
    $(document).on("change",".QuantitySelector__CurrentQuantity",function(){
  
  
   var dataLine= $(this).data("line");
  var dataQuantity= $(this).val();
    $.ajax({
        url: '/cart/change',
        Method: 'POST',
        dataType: "json",
        data: {
                line:dataLine,
                quantity:dataQuantity                         
                },

        success: function(data){
            console.log("Quantity Change Succss"); 
          
             $('#testWrapper').load(' #testWrapper');
            $("#CartSubtotal").load(" #CartSubtotal");
             $("#badgeCounter").html(data.item_count);
        
        }       
    });
      
   //  // Do more stuff every anchor click here...
   //  jQuery.getJSON('/cart.js', function(cart) {
   // // now have access to Shopify cart object
   // console.log(cart);
// } );
});


   $(document).on('click', '.cart__remove_button',function(e){
    e.preventDefault();
     
   var dataLine= $(this).data("line");
 
 
    $.ajax({
        url: '/cart/change',
        Method: 'POST',
        dataType: "json",
        data: {
                line:dataLine,
                quantity:0                         
                },

        success: function(data){
           $('#testWrapper').load(' #testWrapper');
            $("#CartSubtotal").load(" #CartSubtotal");
            $("#badgeCounter").html(data.item_count);
        

             
        }       
    });
    // Do more stuff every anchor click here...
});

     $(document).on('click', '.Icon--cart.icon',function(e){
    e.preventDefault();
       
        $(".cart-popup-wrapper").removeClass("cart-popup-wrapper--hidden");
        $(".cart-popup-wrapper").addClass("is-transitioning");

     });
      $(document).on('click', '.cart-popup__close',function(e){
    e.preventDefault();
       
        $(".cart-popup-wrapper").removeClass("is-transitioning");
        $(".cart-popup-wrapper").addClass("cart-popup-wrapper--hidden");

     });

  $(document).on("click", function (event) {
    // If the target is not the container or a child of the container, then process
    // the click event for outside of the container.
    if ($(event.target).closest("#mainPopup,.Icon--cart").length == 0) {
    
         $(".cart-popup-wrapper").removeClass("is-transitioning");
         $(".cart-popup-wrapper").addClass("cart-popup-wrapper--hidden");
    }
  });
  $('.QuantitySelector__CurrentQuantity').bind("keypress", function(e) {
        return e.which !== 13;
});



  


   

  

    

</script>